{"version":3,"file":"game.js","sourceRoot":"","sources":["../game.ts"],"names":[],"mappings":"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","sourcesContent":["type Elixir = {\r\n    id: string;\r\n    name: string;\r\n    effect: string;\r\n};\r\n\r\ntype Spell = {\r\n    id: string;\r\n    name: string;\r\n    incantation: string;\r\n};\r\n\r\nconst Endpoints = {\r\n    ELIXIRS: \"Elixirs\",\r\n    SPELLS: \"Spells\",\r\n} as const;\r\n\r\ntype EndpointType = typeof Endpoints[keyof typeof Endpoints];\r\n\r\nconst gameContainer = document.getElementById(\"game\")!;\r\n\r\nlet elixirs: Elixir[] = [];\r\nlet spells: Spell[] = [];\r\nlet validOption: string | undefined = undefined;\r\n\r\nasync function fetchData<T>(endpoint: EndpointType): Promise<T[]> {\r\n    const response = await fetch(\r\n        `https://wizard-world-api.herokuapp.com/${endpoint}`\r\n    );\r\n\r\n    if (!response.ok) {\r\n        throw new Error(`Error fetching data from ${endpoint}`);\r\n    }\r\n\r\n    const data: T[] = await response.json();\r\n    return data;\r\n}\r\n\r\nasync function fetchAllData(): Promise<void> {\r\n    const [elixirsResponse, spellsResponse] = await Promise.all([\r\n        fetchData<Elixir>(Endpoints.ELIXIRS),\r\n        fetchData<Spell>(Endpoints.SPELLS),\r\n    ]);\r\n\r\n    elixirs = elixirsResponse.filter((elixir: Elixir) => elixir.effect);\r\n    spells = spellsResponse.filter((spell: Spell) => spell.incantation);\r\n}\r\n\r\nfunction getRandomElements<T>(array: T[], count: number): T[] {\r\n    const indexes: Set<number> = new Set();\r\n\r\n    while (indexes.size < count) {\r\n        const randomIndex = Math.floor(Math.random() * array.length);\r\n        indexes.add(randomIndex);\r\n    }\r\n\r\n    return Array.from(indexes).map((index) => array[index]);\r\n}\r\n\r\nfunction generateOptions<T>(randomElements: T[]): {rightOption: T; options: T[]; } \r\n{\r\n    const [rightOption, ...rest] = randomElements;\r\n\r\n    const options = [rightOption, ...rest].sort(() =>\r\n        Math.random() > 0.5 ? 1 : -1\r\n    );\r\n\r\n    return {\r\n        rightOption,\r\n        options,\r\n    };\r\n}\r\n\r\nfunction elixirGame(): void {\r\n    const { options, rightOption } = generateOptions(\r\n        getRandomElements(elixirs, 3)\r\n    );\r\n\r\n    validOption = rightOption.name;\r\n\r\n    console.log(`Cheat Mode: Right answer is ${validOption}`);\r\n\r\n    renderOptions(\r\n        `Which elixir effect is: \"${rightOption.effect}\"?`,\r\n        options.map((elixir) => elixir.name)\r\n    );\r\n}\r\n\r\nfunction spellGame(): void {\r\n    const { options, rightOption } = generateOptions(\r\n        getRandomElements(spells, 3)\r\n    );\r\n\r\n    validOption = rightOption.name;\r\n\r\n    console.log(`Cheat Mode: Right answer is ${validOption}`);\r\n\r\n    renderOptions(\r\n        `Which spell incantation is: \"${rightOption.incantation}\"?`,\r\n        options.map((spell) => spell.name)\r\n    );\r\n}\r\n\r\nfunction renderOptions(question: string, answers: string[]): void {\r\n    const questionElement = document.getElementById(\"question\");\r\n\r\n    if (!gameContainer || !questionElement) {\r\n        throw new Error(\"Game container or question element not found\");\r\n    }\r\n\r\n    gameContainer.innerHTML = \"\";\r\n\r\n    questionElement.textContent = question;\r\n\r\n    answers.forEach((answer) => {\r\n        const option = document.createElement(\"button\");\r\n\r\n        option.textContent = answer;\r\n\r\n        gameContainer.appendChild(option);\r\n    });\r\n}\r\n\r\ngameContainer!.addEventListener(\"click\", (event: Event) => {\r\n    const target = event.target as HTMLElement; // samo event.target rzucało w ts błąd\r\n\r\n    if (target.tagName === \"BUTTON\") {\r\n        const selectedOption = target.textContent;\r\n\r\n        if (selectedOption === validOption) {\r\n            round();\r\n        } else {\r\n            alert(\"Wrong answer!\");\r\n        }\r\n    }\r\n});\r\n\r\nfunction round(): void {\r\n    const randomGame = Math.random() > 0.5 ? elixirGame : spellGame;\r\n\r\n    randomGame();\r\n}\r\n\r\nasync function startGame(): Promise<void> {\r\n    await fetchAllData();\r\n\r\n    round();\r\n}\r\n\r\nstartGame();\r\n"]}